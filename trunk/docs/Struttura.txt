Struttura

application/ - This directory is the meat and bones of what you are developing. It will house the MVC system, as well as conifgurations, api's used, and your bootstrap file.

apis/ - This directory is for your application specific web-service api files that are consumed and/or provided by your application (through a controller presumabely).

config/ - The application wide configuration directory

controllers/models/views/ - These directories serve as the 'default' controller/model/view directories. Having these three things inside the application directory provides the best layout for starting a simple project as well as starting a "modular" project that has a concept of "global" controllers/models/views.

data/ - The goal of this directory is to provide a place to store application data that is volatile and rumtime. The interruption of some data inside this directory might cause the application to fail on any one request. Also, the information in this directory may or may not make its way from/into a subversion repository. Examples of things contained in this directory are session files, cache files, sqlite databases, logs and indexes to name a few.

layouts/ - This layout directory is for MCV based layouts. Since Zend_Layout is capable of MVC and non-mvc layouts, this location choice for this directory signifies that layouts are not on a 1-to-1 relationship with controllers and are independent of templates within views/.

bootstrap.php - This file represents the entry point into your application. This first could be procedural php or could contain a Bootstrap class. Either way, the purpose for this file is to bootstrap the application and make components aware of their comsumption by starting or configuring them. This is also the file which would contain your $controller->dispatch() call.

modules/ - The idea of modules allows a developer to group a set of related controllers (that might be growing to be too large for any one controller repository) into a logically orgainized group. The sub structure of the modules directory would mimic the entire structure of the application directory minus the bootstrap.php file.
docs/ - This directory exists for documentation, either generated (think PHPDoc) or hand written

library/ - This directory houses the library/Zend/* folder which is the Zend Framework. In theory, you could also use other include_path-able not named Zend/* in here

scripts/ - This directory is intended for maintenance, and/or build scripts. Typically, these might include command line, cron, or phing build scripts that are executed independently of the web application itself.

temp/ - The temp folder (typically set in php.ini as /tmp on unix), is set aside for non- or semi- volatile application data. Roughly speaking, the contents of temp would typically be generated by an application and used during its lifetime of requests. This information (typically), would not be seen inside the applications svn repository. Also, it should be noted that usually, if temp/ were cleared out, the application should be able to continue running without much of a hiccup.

tests/ - This directory serves as a purpose for containing application tests. These could be hand written, phpunit tests, selenium based tests or (insert your testing framework here).

This project structure would be specified in the following project profile: